{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { useEffect, useState } from 'react';\nimport Colors from \"../../Utils/Colors\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { useUser } from '@clerk/clerk-expo';\nimport { app } from \"../../Utils/FirebaseConfig\";\nimport PlaceItem from \"../HomeScreen/PlaceItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FavoriteScreen() {\n  var db = getFirestore(app);\n  var _useUser = useUser(),\n    user = _useUser.user;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    favList = _useState2[0],\n    setFavList = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    user && getFav();\n  }, [user]);\n  var getFav = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var _user$primaryEmailAdd;\n      setLoading(true);\n      setFavList([]);\n      var q = query(collection(db, \"ev-fav-place\"), where(\"email\", \"==\", user == null ? void 0 : (_user$primaryEmailAdd = user.primaryEmailAddress) == null ? void 0 : _user$primaryEmailAdd.emailAddress));\n      var querySnapshot = yield getDocs(q);\n      querySnapshot.forEach(function (doc) {\n        setFavList(function (favList) {\n          return [].concat(_toConsumableArray(favList), [doc.data()]);\n        });\n        setLoading(false);\n      });\n    });\n    return function getFav() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsxs(Text, {\n      style: {\n        padding: 10,\n        fontFamily: 'outfit-medium',\n        fontSize: 30\n      },\n      children: [\"My Favorite\", _jsx(Text, {\n        style: {\n          color: Colors.PRIMARY\n        },\n        children: \" Place\"\n      })]\n    }), !favList ? _jsxs(View, {\n      style: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [_jsx(ActivityIndicator, {\n        size: 'large',\n        color: Colors.PRIMARY\n      }), _jsx(Text, {\n        style: {\n          fontFamily: 'outfit',\n          marginTop: 5\n        },\n        children: \"Loading...\"\n      })]\n    }) : null, _jsx(FlatList, {\n      data: favList,\n      onRefresh: function onRefresh() {\n        return getFav();\n      },\n      refreshing: loading,\n      style: {\n        paddingBottom: 200\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n          index = _ref2.index;\n        return _jsx(PlaceItem, {\n          place: item.place,\n          isFav: true,\n          markedFav: function markedFav() {\n            return getFav();\n          }\n        });\n      }\n    }), _jsx(View, {\n      style: {\n        marginBottom: 200,\n        height: 200\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","Colors","getFirestore","collection","query","where","getDocs","useUser","app","PlaceItem","jsx","_jsx","jsxs","_jsxs","FavoriteScreen","db","_useUser","user","_useState","_useState2","_slicedToArray","favList","setFavList","_useState3","_useState4","loading","setLoading","getFav","_ref","_asyncToGenerator","_user$primaryEmailAdd","q","primaryEmailAddress","emailAddress","querySnapshot","forEach","doc","concat","_toConsumableArray","data","apply","arguments","View","children","Text","style","padding","fontFamily","fontSize","color","PRIMARY","height","display","alignItems","justifyContent","ActivityIndicator","size","marginTop","FlatList","onRefresh","refreshing","paddingBottom","renderItem","_ref2","item","index","place","isFav","markedFav","marginBottom"],"sources":["C:/Users/vivek/Downloads/final_yr_project/222957_EVChargingAppmain/EV-Charging-App-main/App/Screen/FavoriteScreen/FavoriteScreen.jsx"],"sourcesContent":["import { View, Text, ActivityIndicator, FlatList } from 'react-native'\nimport React, { useEffect, useState } from 'react'\nimport Colors from '../../Utils/Colors'\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { useUser } from '@clerk/clerk-expo';\nimport { app } from '../../Utils/FirebaseConfig';\nimport PlaceItem from '../HomeScreen/PlaceItem';\n\nexport default function FavoriteScreen() {\n  const db = getFirestore(app);\n  const { user } = useUser();\n  const [favList, setFavList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    user && getFav();\n  }, [user])\n\n  /**\n   * Get All Fav List list of places from firebase\n   */\n  const getFav = async () => {\n    setLoading(true)\n    setFavList([])\n    const q = query(collection(db, \"ev-fav-place\"),\n      where(\"email\", \"==\", user?.primaryEmailAddress?.emailAddress));\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach((doc) => {\n      setFavList(favList => [...favList, doc.data()]);\n      setLoading(false);\n    });\n  }\n  return (\n    <View >\n      <Text style={{\n        padding: 10, fontFamily: 'outfit-medium',\n        fontSize: 30\n      }}>My Favorite\n        <Text style={{ color: Colors.PRIMARY }}> Place</Text></Text>\n      {!favList ? <View style={{\n        height: '100%',\n        display: 'flex', alignItems: 'center',\n        justifyContent: 'center'\n      }}>\n        <ActivityIndicator\n          size={'large'}\n          color={Colors.PRIMARY}\n        />\n        <Text style={{ fontFamily: 'outfit', marginTop: 5 }}>Loading...</Text>\n      </View> : null}\n\n      <FlatList\n        data={favList}\n        onRefresh={() => getFav()}\n        refreshing={loading}\n        style={{ paddingBottom: 200 }}\n        renderItem={({ item, index }) => (\n          <PlaceItem place={item.place} isFav={true}\n            markedFav={() => getFav()} />\n        )}\n      />\n      <View style={{ marginBottom: 200, height: 200 }}>\n\n      </View>\n    </View>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}